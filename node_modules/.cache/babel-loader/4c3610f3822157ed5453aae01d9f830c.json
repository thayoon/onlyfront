{"ast":null,"code":"import axios from \"axios\";\nimport create from \"zustand\"; //axios.defaults.withCredentials = true; //CORS 오류 때문에 추가\n\nexport const useStore = create((set, get) => ({\n  articles: {\n    economy: [],\n    culture: [],\n    society: [],\n    sports: [],\n    entertain: [],\n    politic: [],\n    IT: []\n  },\n  //withCredentials: true, // 추가\n  getArticles: async () => {\n    const ecoResponse = await axios.get(\"/economy\");\n    const culResponse = await axios.get(\"/culture\");\n    const socResponse = await axios.get(\"/society\");\n    const spoResponse = await axios.get(\"/sports\");\n    const entResponse = await axios.get(\"/entertain\");\n    const polResponse = await axios.get(\"/politics\");\n    const itResponse = await axios.get(\"/it\");\n    let it = [];\n    let eco = [];\n    let cul = [];\n    let soc = [];\n    let spo = [];\n    let ent = [];\n    let pol = [];\n\n    for (let x of ecoResponse.data) {\n      eco.push(x);\n    }\n\n    for (let x of culResponse.data) {\n      cul.push(x);\n    }\n\n    for (let x of socResponse.data) {\n      soc.push(x);\n    }\n\n    for (let x of spoResponse.data) {\n      spo.push(x);\n    }\n\n    for (let x of entResponse.data) {\n      ent.push(x);\n    }\n\n    for (let x of polResponse.data) {\n      pol.push(x);\n    }\n\n    for (let x of itResponse.data) {\n      it.push(x);\n    }\n\n    set({\n      articles: {\n        IT: it,\n        economy: eco,\n        culture: cul,\n        society: soc,\n        sports: spo,\n        entertain: ent,\n        politic: pol\n      }\n    });\n  },\n  getData: async () => {\n    if (get().articles !== undefined) {\n      const res = get().articles;\n      console.log(res);\n      return res;\n    } else {\n      const ecoResponse = await axios.get(\"/economy\");\n      const culResponse = await axios.get(\"/culture\");\n      const socResponse = await axios.get(\"/society\");\n      const spoResponse = await axios.get(\"/sports\");\n      const entResponse = await axios.get(\"/entertain\");\n      const polResponse = await axios.get(\"/politics\");\n      const itResponse = await axios.get(\"/it\");\n      let it = [];\n      let eco = [];\n      let cul = [];\n      let soc = [];\n      let spo = [];\n      let ent = [];\n      let pol = [];\n\n      for (let x of ecoResponse.data) {\n        eco.push(x);\n      }\n\n      for (let x of culResponse.data) {\n        cul.push(x);\n      }\n\n      for (let x of socResponse.data) {\n        soc.push(x);\n      }\n\n      for (let x of spoResponse.data) {\n        spo.push(x);\n      }\n\n      for (let x of entResponse.data) {\n        ent.push(x);\n      }\n\n      for (let x of polResponse.data) {\n        pol.push(x);\n      }\n\n      for (let x of itResponse.data) {\n        it.push(x);\n      }\n\n      set({\n        articles: {\n          IT: it,\n          economy: eco,\n          culture: cul,\n          society: soc,\n          sports: spo,\n          entertain: ent,\n          politic: pol\n        }\n      });\n    }\n  }\n}));","map":{"version":3,"names":["axios","create","useStore","set","get","articles","economy","culture","society","sports","entertain","politic","IT","getArticles","ecoResponse","culResponse","socResponse","spoResponse","entResponse","polResponse","itResponse","it","eco","cul","soc","spo","ent","pol","x","data","push","getData","undefined","res","console","log"],"sources":["C:/bulid/onlyfront/src/components/common/store.js"],"sourcesContent":["import axios from \"axios\";\r\nimport create from \"zustand\";\r\n\r\n//axios.defaults.withCredentials = true; //CORS 오류 때문에 추가\r\n\r\nexport const useStore = create((set, get) => ({\r\n  articles: {\r\n    economy: [],\r\n    culture: [],\r\n    society: [],\r\n    sports: [],\r\n    entertain: [],\r\n    politic: [],\r\n    IT: [],\r\n  },\r\n  //withCredentials: true, // 추가\r\n\r\n  getArticles: async () => {\r\n    const ecoResponse = await axios.get(\"/economy\");\r\n    const culResponse = await axios.get(\"/culture\");\r\n    const socResponse = await axios.get(\"/society\");\r\n    const spoResponse = await axios.get(\"/sports\");\r\n    const entResponse = await axios.get(\"/entertain\");\r\n    const polResponse = await axios.get(\"/politics\");\r\n    const itResponse = await axios.get(\"/it\");\r\n\r\n    let it = [];\r\n    let eco = [];\r\n    let cul = [];\r\n    let soc = [];\r\n    let spo = [];\r\n    let ent = [];\r\n    let pol = [];\r\n\r\n    for (let x of ecoResponse.data) {\r\n      eco.push(x);\r\n    }\r\n    for (let x of culResponse.data) {\r\n      cul.push(x);\r\n    }\r\n    for (let x of socResponse.data) {\r\n      soc.push(x);\r\n    }\r\n    for (let x of spoResponse.data) {\r\n      spo.push(x);\r\n    }\r\n    for (let x of entResponse.data) {\r\n      ent.push(x);\r\n    }\r\n    for (let x of polResponse.data) {\r\n      pol.push(x);\r\n    }\r\n    for (let x of itResponse.data) {\r\n      it.push(x);\r\n    }\r\n    set({\r\n      articles: {\r\n        IT: it,\r\n        economy: eco,\r\n        culture: cul,\r\n        society: soc,\r\n        sports: spo,\r\n        entertain: ent,\r\n        politic: pol,\r\n      },\r\n    });\r\n  },\r\n  getData: async () => {\r\n    if (get().articles !== undefined) {\r\n      const res = get().articles;\r\n      console.log(res);\r\n      return res;\r\n    } else {\r\n      const ecoResponse = await axios.get(\"/economy\");\r\n      const culResponse = await axios.get(\"/culture\");\r\n      const socResponse = await axios.get(\"/society\");\r\n      const spoResponse = await axios.get(\"/sports\");\r\n      const entResponse = await axios.get(\"/entertain\");\r\n      const polResponse = await axios.get(\"/politics\");\r\n      const itResponse = await axios.get(\"/it\");\r\n\r\n      let it = [];\r\n      let eco = [];\r\n      let cul = [];\r\n      let soc = [];\r\n      let spo = [];\r\n      let ent = [];\r\n      let pol = [];\r\n\r\n      for (let x of ecoResponse.data) {\r\n        eco.push(x);\r\n      }\r\n      for (let x of culResponse.data) {\r\n        cul.push(x);\r\n      }\r\n      for (let x of socResponse.data) {\r\n        soc.push(x);\r\n      }\r\n      for (let x of spoResponse.data) {\r\n        spo.push(x);\r\n      }\r\n      for (let x of entResponse.data) {\r\n        ent.push(x);\r\n      }\r\n      for (let x of polResponse.data) {\r\n        pol.push(x);\r\n      }\r\n      for (let x of itResponse.data) {\r\n        it.push(x);\r\n      }\r\n      set({\r\n        articles: {\r\n          IT: it,\r\n          economy: eco,\r\n          culture: cul,\r\n          society: soc,\r\n          sports: spo,\r\n          entertain: ent,\r\n          politic: pol,\r\n        },\r\n      });\r\n    }\r\n  },\r\n}));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}